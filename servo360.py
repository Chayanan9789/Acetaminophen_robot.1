# servo_control_360.py
# ควบคุม Servo Motor แบบหมุนต่อเนื่อง (360 องศา) ด้วย pyfirmata
# โดยส่งค่า 0-180 เพื่อควบคุมความเร็วและทิศทาง

from pyfirmata2 import Arduino
import time

# ─────────────────── 1) เชื่อมต่อบอร์ด ───────────────────
# ตรวจสอบให้แน่ใจว่าได้เปลี่ยน 'COM19' เป็นพอร์ตที่ถูกต้องของ Arduino ของคุณ
board = Arduino('COM19')
print("เริ่มการทำงาน")

# ─────────────────── 2) ตั้งขาเป็นโหมด Servo ─────────────
# สำหรับเซอร์โว 360 องศา (Continuous Rotation)
# เรายังคงใช้โหมด 's' (servo) แต่ค่าที่ส่งไปจะถูกตีความเป็นการควบคุมความเร็ว/ทิศทาง
# 'd' = digital pin
# '8' = หมายเลขขา D8 (ขา PWM ที่ใช้ได้สำหรับ Servo)
# 's' = servo mode (รับค่า 0-180° ซึ่งจะถูกแปลงเป็นความเร็ว/ทิศทางสำหรับ 360° servo)
servo_pin = board.get_pin('d:8:s')

print("📍 เริ่มควบคุมเซอร์โวมอเตอร์แบบหมุนต่อเนื่องที่ D8 (Ctrl-C เพื่อหยุด)")
print("ค่าประมาณ 90 = หยุด")
print("ค่าน้อยกว่า 90 = หมุนทิศทางหนึ่ง")
print("ค่ามากกว่า 90 = หมุนอีกทิศทางหนึ่ง")

try:
    while True:
        # ── หมุนไปข้างหน้า (ความเร็วปานกลาง) ──
        print("➡ หมุนไปข้างหน้า (ค่า 100)")
        servo_pin.write(100) # ค่ามากกว่า 90 เล็กน้อย เพื่อหมุนไปข้างหน้าช้าๆ
        time.sleep(0.5)        # หมุน 3 วินาที

        # ── หยุด ──
        print("⏸ หยุด (ค่า 90)")
        servo_pin.write(91)  # ค่า 90 เพื่อหยุดเซอร์โว
        time.sleep(2)        # หยุด 2 วินาที

        # ── หมุนกลับหลัง (ความเร็วปานกลาง) ──
        print("⬅ หมุนกลับหลัง (ค่า 80)")
        servo_pin.write(88)  # ค่าน้อยกว่า 90 เล็กน้อย เพื่อหมุนกลับหลังช้าๆ
        time.sleep(0.5)        # หมุน 3 วินาที

        # ── หยุดอีกครั้ง ──
        print("⏸ หยุด (ค่า 90)")
        servo_pin.write(91)  # ค่า 90 เพื่อหยุดเซอร์โว
        time.sleep(2)        # หยุด 2 วินาที

except KeyboardInterrupt:
    print("\n ผู้ใช้สั่งหยุดการทำงาน")

finally:
    # สำคัญ: ปิดพอร์ตอย่างปลอดภัยเมื่อจบโปรแกรม
    # และตรวจสอบให้แน่ใจว่าเซอร์โวหยุดหมุนก่อนปิด
    print("หยุดเซอร์โวและปิดพอร์ต")
    servo_pin.write(91) # ให้แน่ใจว่าเซอร์โวหยุดก่อนออก
    time.sleep(1)       # หน่วงเวลาเล็กน้อยเพื่อให้เซอร์โวหยุดสนิท
    board.exit()